/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { Pricefeed, PricefeedInterface } from "../../contracts/Pricefeed";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "coinId",
        type: "string",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "updatedAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "priceUsd",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct Pricefeed.PriceData",
        name: "epoch",
        type: "tuple",
      },
    ],
    name: "PriceUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "pairId",
        type: "string",
      },
    ],
    name: "getPrice",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "updatedAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "priceUsd",
            type: "uint256",
          },
        ],
        internalType: "struct Pricefeed.PriceData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "reclaimContract",
    outputs: [
      {
        internalType: "contract Reclaim",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "setReclaimContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "provider",
            type: "string",
          },
          {
            internalType: "string",
            name: "parameters",
            type: "string",
          },
          {
            internalType: "string",
            name: "context",
            type: "string",
          },
        ],
        internalType: "struct Claims.ClaimInfo",
        name: "claimInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "identifier",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "timestampS",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "epoch",
            type: "uint256",
          },
        ],
        internalType: "struct Claims.CompleteClaimData",
        name: "claimData",
        type: "tuple",
      },
      {
        internalType: "bytes[]",
        name: "signatures",
        type: "bytes[]",
      },
    ],
    name: "updatePriceWithProof",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a08060405234610031573060805261280390816100378239608051818181610c6801528181610de601526110b40152f35b600080fdfe6080604052600436101561001257600080fd5b6000803560e01c8063160bf9ec146113455780633659cfe61461108f5780634483b1f5146110665780634f1ef28614610da8578063524f388914610d1957806352d1902d14610c55578063715018a614610bf85780638129fc1c14610aa057806384bfa58e146101525780638da5cb5b146101295763f2fde38b1461009657600080fd5b34610126576020366003190112610126576100af61138a565b6100b761148f565b6001600160a01b038116156100d2576100cf906114e7565b80f35b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b80fd5b50346101265780600319360112610126576097546040516001600160a01b039091168152602090f35b50346101265760c036600319011261012657600435906001600160401b03821161012657606060031983360301126101265760405191606083018381106001600160401b03821117610a8c5760405280600401356001600160401b038111610a88576101c49060043691840101611448565b835260248101356001600160401b038111610a88576101e99060043691840101611448565b602084015260448101356001600160401b038111610a885761021091369101600401611448565b6040830152608036602319011261012657604051608081018181106001600160401b03821117610a8c5760405260243581526044356001600160a01b0381168103610a8857602082015260643563ffffffff81168103610a8857604082015260843560608201526001600160401b0360a43511610a845736602360a435011215610a84576001600160401b0360a435600401351161099d5760405190600460a435013560051b6102c3602082018461140c565b60a4356004013583526020830180913660248260a4350101116109ef57602460a43501915b60248260a43501018310610a4d57505050845160405161032560208281610318818301968781519384920161171f565b810103808452018261140c565b51902060405190630687474760e41b6020830152600482528160408101106001600160401b03604084011117610a39576040820160405281516020830120036109f3575060018060a01b0360ca54169163ffffffff60608201511693833b156109ef5793918593916040519586946348608d9b60e11b8652600486015260e0602486015260606103f76103c48b518360e48a0152610144890190611742565b6103e160208d01519160e31992838b8303016101048c0152611742565b9060408d015190898303016101248a0152611742565b928051604488015260018060a01b03602082015116606488015263ffffffff6040820151166084880152015160a48601526003198583030160c486015251808252602082019160208260051b820101939287915b8383106109bc57505050505082809103915afa80156109b157610985575b50906020015161047881611939565b509190610949576104cd6104a8604051610491816113a5565b60038152621d5c9b60ea1b602082015284846124d2565b60606104c360206104b984886117ea565b51015192866117ea565b51015190836123e6565b6104de6104d86117fe565b8261246d565b15610904576104f8906104ef6117fe565b518151916123e6565b9161052b604051610508816113a5565b600f81526e726573706f6e73654d61746368657360881b602082015282846124d2565b61053e61053882846117ea565b5161187a565b60058110156108f0576002036108a057600181018091116107ff579060606105a161058c6105aa9594604051610573816113a5565b600581526476616c756560d81b60208201528587612649565b602061059882866117ea565b510151936117ea565b510151916123e6565b82918290816006815b855185101561089457841580610873575b61086a575b8660306105d687896118fd565b5160f81c101580610852575b1561082857610686575b600a90808281020582148115171561067057602f1961060b87896118fd565b5160f81d01607f198112607f82131761065c57890b91028181019182128015918a13918216911516176106485761064290946118ee565b936105b3565b634e487b7160e01b88526011600452602488fd5b634e487b7160e01b8a52601160045260248afd5b634e487b7160e01b600052601160045260246000fd5b9381939692959115600014610813575050505b806107cd575b50906107a4575b82811261075f577f19e430fc4cc23027fe3dbde33905252a0d18d87647dfa67464f2eceed8a823b69161072a602061074a936040516106e4816113a5565b4281528281019182526001604051928651938581818a019661070781838a61171f565b810160c9815203019020925183555191015560405180938192865192839161171f565b810160c98152030190206001604051938493606085526060850190611742565b9180546020850152015460408301520390a180f35b60405162461bcd60e51b815260206004820152601960248201527f507269636520736f6d65686f77206973206e65676174697665000000000000006044820152606490fd5b8060000390808205600019149015176106a657634e487b7160e01b600052601160045260246000fd5b604d81116107ff57600a0a818102919060008212600160ff1b821416610670578183051490151715610670573861069f565b634e487b7160e01b85526011600452602485fd5b9390949195926108229061192c565b906105ec565b5093602e61083682886118fd565b5160f81c14610849575b610642906118ee565b60019650610840565b50603961085f87896118fd565b5160f81c11156105e2565b600192506105c9565b50602d60f81b6001600160f81b031961088c87896118fd565b5116146105c4565b93509194509250610699565b60405162461bcd60e51b815260206004820152602260248201527f417272617920657870656374656420666f7220726573706f6e73654d61746368604482015261657360f01b6064820152608490fd5b634e487b7160e01b86526021600452602486fd5b60405162461bcd60e51b815260206004820152601e60248201527f55524c206973206e6f742076616c696420436f696e4765636b6f2055524c00006044820152606490fd5b60405162461bcd60e51b81526020600482015260146024820152732330b4b632b2103a37903830b939b2902529a7a760611b6044820152606490fd5b6001600160401b03811161099d576040526020610469565b634e487b7160e01b82526041600452602482fd5b6040513d84823e3d90fd5b92959750929550926020806109dd600193601f198682030187528951611742565b9701930193018795938997959261044b565b8580fd5b604060649162461bcd60e51b82820152602060448201526018838201527f50726f7669646572202768747470272072657175697265640000000000000000608482015201fd5b634e487b7160e01b86526041600452602486fd5b6001600160401b03833511610a8057602080602492610a733685883560a4350101611448565b81520193019290506102e8565b8680fd5b5080fd5b8280fd5b634e487b7160e01b83526041600452602483fd5b5034610126578060031936011261012657805460ff8160081c161590818092610beb575b8015610bd4575b15610b785760ff198116600117835581610b67575b50610afa60ff835460081c16610af581611767565b611767565b610b03336114e7565b60ca80546001600160a01b03191673f6456411fd72927451e8432d4664022d190f8b5a179055610b305780f35b61ff001981541681557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160018152a180f35b61ffff191661010117825538610ae0565b60405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b50303b158015610acb5750600160ff821614610acb565b50600160ff821610610ac4565b5034610126578060031936011261012657610c1161148f565b609780546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b50346101265780600319360112610126577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163003610cae5760206040516000805160206127ae8339815191528152f35b60405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c00000000000000006064820152608490fd5b503461012657602080600319360112610a84576004356001600160401b038111610a885781604093610d52610d76933690600401611448565b90828651610d5f816113a5565b82815201528185519382858094519384920161171f565b810160c9815203019020908251610d8c816113a5565b8160018454948584520154910190815283519283525190820152f35b50604036600319011261012657610dbd61138a565b6024356001600160401b038111610a8857610ddc903690600401611448565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116929190610e1630851415611530565b610e336000805160206127ae833981519152948286541614611591565b610e3b61148f565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615610e715750506100cf91506115f2565b8216604051936352d1902d60e01b85526020948581600481865afa879181611033575b50610ef55760405162461bcd60e51b815260048101879052602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608490fd5b9492939403610fdc57610f07846115f2565b7fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b8580a2815115801590610fd4575b610f41575b50505080f35b610fc292848060405194610f54866113d6565b602786527f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c85870152660819985a5b195960ca1b60408701528481519101845af4903d15610fcb573d610fa68161142d565b90610fb4604051928361140c565b81528681943d92013e611682565b50388080610f3b565b60609250611682565b506001610f36565b60405162461bcd60e51b815260048101839052602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608490fd5b9091508681813d831161105f575b61104b818361140c565b8101031261105b57519038610e94565b8780fd5b503d611041565b503461012657806003193601126101265760ca546040516001600160a01b039091168152602090f35b503461012657602080600319360112610a84576110aa61138a565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166110e130821415611530565b6110fe6000805160206127ae833981519152918383541614611591565b61110661148f565b60405190848201928284106001600160401b03851117611331578360405286835260ff7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143541660001461116157505050506100cf91506115f2565b8492939416906040516352d1902d60e01b81528681600481865afa8891816112fe575b506111e55760405162461bcd60e51b815260048101889052602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608490fd5b95939495036112a7576111f7826115f2565b7fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b8680a2848351158015906112a0575b611234575b505050505080f35b806112959560405195611246876113d6565b602787527f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c86880152660819985a5b195960ca1b60408801525190845af4903d15610fcb573d610fa68161142d565b50388080808461122c565b5080611227565b60405162461bcd60e51b815260048101849052602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608490fd5b9091508781813d831161132a575b611316818361140c565b8101031261132657519038611184565b8880fd5b503d61130c565b634e487b7160e01b87526041600452602487fd5b50346101265760203660031901126101265761135f61138a565b61136761148f565b60018060a01b03166bffffffffffffffffffffffff60a01b60ca54161760ca5580f35b600435906001600160a01b03821682036113a057565b600080fd5b604081019081106001600160401b038211176113c057604052565b634e487b7160e01b600052604160045260246000fd5b606081019081106001600160401b038211176113c057604052565b60c081019081106001600160401b038211176113c057604052565b90601f801991011681019081106001600160401b038211176113c057604052565b6001600160401b0381116113c057601f01601f191660200190565b81601f820112156113a05780359061145f8261142d565b9261146d604051948561140c565b828452602083830101116113a057816000926020809301838601378301015290565b6097546001600160a01b031633036114a357565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b609780546001600160a01b039283166001600160a01b0319821681179092559091167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3565b1561153757565b60405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b19195b1959d85d1958d85b1b60a21b6064820152608490fd5b1561159857565b60405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b6163746976652070726f787960a01b6064820152608490fd5b803b15611627576000805160206127ae83398151915280546001600160a01b0319166001600160a01b03909216919091179055565b60405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608490fd5b919290156116e45750815115611696575090565b3b1561169f5790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b8251909150156116f75750805190602001fd5b60405162461bcd60e51b81526020600482015290819061171b906024830190611742565b0390fd5b60005b8381106117325750506000910152565b8181015183820152602001611722565b9060209161175b8151809281855285808601910161171f565b601f01601f1916010190565b1561176e57565b60405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608490fd5b8051156117d45760200190565b634e487b7160e01b600052603260045260246000fd5b80518210156117d45760209160051b010190565b60405190608082018281106001600160401b038211176113c05760405260448252636964733d60e01b6060837f68747470733a2f2f6170692e636f696e6765636b6f2e636f6d2f6170692f763360208201527f2f73696d706c652f70726963653f76735f63757272656e636965733d7573642660408201520152565b5160058110156118875790565b634e487b7160e01b600052602160045260246000fd5b604051906118aa826113d6565b60006040838281528260208201520152565b604051906118c9826113f1565b8160a06000918281528260208201528260408201528260608201528260808201520152565b60001981146106705760010190565b9081518110156117d4570160200190565b60ff1660ff81146106705760010190565b9190820391821161067057565b8015610670576000190190565b61194161189d565b5061194a61189d565b506040805192611959846113d6565b600091828552602090818601908482528087016000199182825280516103e081018181106001600160401b03821117611fb7578252601e815285885b6103c08110611fa1575050978451916119ac6118bc565b505b8a518251811015611f93576001600160f81b0319906119cd90846118fd565b5116607b60f81b8114808015611f86575b611eda5750607d60f81b8114808015611ecd575b611d635750601160f91b8114611d5657600160fd1b8181148015611d49575b8015611d3c575b8015611d2f575b611d2857601d60f91b8214611d1357600b60fa1b8214611bca57600360fc1b82101580611bbc575b8015611baf575b8015611ba2575b8015611b95575b8015611b88575b611aa4578110159081611a95575b50611a88575b611a818b516118ee565b8b526119ae565b5060019950505050505050565b603f60f91b1015905038611a71565b5050918351858103611b0d575b50611abd828b8d61227c565b80611b025750611acc906118ee565b918351858103611add575b50611a77565b611ae960a0918c6117ea565b510160ff611af98183511661190e565b16905238611ad7565b9a5050505050505050565b611b17908b6117ea565b5180519060059081831015611b74576001809314918215611b45575b505015611ab1579a5050505050505050565b8151919250811015611b74576003149081611b63575b503880611b33565b60ff915060a0015116151538611b5b565b634e487b7160e01b8c52602160045260248cfd5b50603760f91b8214611a63565b50601d60fa1b8214611a5c565b50603360f91b8214611a55565b50602d60f81b8214611a4e565b50603960f81b821115611a47565b50508351858114159081611cf1575b5080611cbc575b15611a77579592979896939094918251828101908111611ca8575b611c08610538828b6117ea565b60059081811015611c9457600214908115611c74575b50611c32575b611c2d9061192c565b611bfb565b87611c3d828b6117ea565b510151151580611c5e575b15611c24578994979193969295989a9952611a77565b506080611c6b828b6117ea565b51015115611c48565b9050611c83610538838c6117ea565b90811015611b745760011438611c1e565b634e487b7160e01b8d52602160045260248dfd5b634e487b7160e01b8b52601160045260248bfd5b50611ccb61053885518c6117ea565b6005811015611cdd5760011415611be0565b634e487b7160e01b8a52602160045260248afd5b611d009150610538908c6117ea565b6005811015611cdd576002141538611bd9565b5050855185810190811161065c578452611a77565b5050611a77565b50600560fa1b8214611a1f565b50600960f91b8214611a18565b50601160f81b8214611a11565b5091611abd828b8d612060565b9050899691989594999a9792939a50600014611ec5576001995b8151858101908111610648575b611d94818a6117ea565b518a810151151580611eb9575b611db45750611daf9061192c565b611d8a565b9b90919493989b9a95969992979a51600580821015611c9457821015611b745703611e97578585528b51600190818101809111611ea5576080611e08848f85946060611e0084846117ea565b5101526117ea565b51015215611e9757805b611e56575b8015611e235750611a77565b611e2d818c6117ea565b518281015115159081611e49575b5015611ad757845238611ad7565b6080915001511538611e3b565b611e60818c6117ea565b518281015115159081611e8a575b50611e8257611e7c9061192c565b80611e12565b808552611e17565b6080915001511538611e6e565b5060019a5050505050505050565b634e487b7160e01b8c52601160045260248cfd5b50608081015115611da1565b600299611d7d565b50605d60f81b82146119f2565b93611ee591506118ee565b92611ef08b8d611fcb565b919015611f775785518c888203611f51575b505015611f4a5760015b6005811015611f365781528b5188820152600190820152855185810190811161065c578452611a77565b634e487b7160e01b8b52602160045260248bfd5b6002611f0c565b60a091611f5d916117ea565b510160ff611f6d8183511661190e565b169052388c611f02565b5060039b505050505050505050565b50605b60f81b82146119de565b505093519698505050505050565b611fa96118bc565b828285010152018690611995565b634e487b7160e01b89526041600452602489fd5b602090929192611fd96118bc565b50018051835180911015612041575061202e60405193611ff8856113f1565b600080865280602087015280604087015280606087015280608087015260a08601528251908561202883836117ea565b526117ea565b5061203981516118ee565b905260019190565b9192916000198101915081116106705761205a916117ea565b51600091565b92919083519161206e6118bc565b5061207985516118ee565b85525b845181518110156122715761209190826118fd565b516001600160f81b031990601160f91b90828116821461221c5760f81c605c14806121f1575b6120cf5750505b6120c885516118ee565b855261207c565b816120e66120dd89516118ee565b808a52856118fd565b5116149081156121d5575b81156121b9575b811561219d575b8115612181575b8115612165575b8115612149575b811561212d575b506000036120be575050909152600190565b8651601d60fa1b925061214090846118fd565b5116143861211b565b9050603160f91b8161215c8851856118fd565b51161490612114565b9050603760f91b816121788851856118fd565b5116149061210d565b9050603960f91b816121948851856118fd565b51161490612106565b9050603360f91b816121b08851856118fd565b511614906120ff565b9050601760fa1b816121cc8851856118fd565b511614906120f8565b9050602f60f81b816121e88851856118fd565b511614906120f1565b50865160018101809111612207578351116120b7565b60246000634e487b7160e01b81526011600452fd5b5050505061222c90849394611fcb565b919015612268576001908181018091116122075760a0935190600384526020840152816040840152606083015260808201526000918291015290565b91905052600390565b505050909152600290565b929190600084519261228c6118bc565b505b855181518110156123db576122a390826118fd565b516001600160f81b03198116600160fd1b81149081156123cd575b81156123bf575b81156123b1575b81156123a3575b8115612395575b8115612387575b506123215760f81c60208110908115612316575b5061230b5761230486516118ee565b865261228e565b505050909152600190565b607f915011386122f5565b5050506001939192935b156123805761233a9082611fcb565b90156123795760a09082936000935190600483526020830152600160408301526060820152600160808201520152612372815161192c565b9052600090565b5052600390565b5052600290565b605d60f81b149050386122e1565b607d60f81b811491506122da565b600b60fa1b811491506122d3565b600d60f81b811491506122cc565b600560f91b811491506122c5565b600960f81b811491506122be565b50509391929361232b565b92916123f2828261191f565b916123fc8361142d565b9261240a604051948561140c565b808452612419601f199161142d565b01366020850137805b82811061243157509193505050565b612468906001600160f81b031961244882896118fd565b5116612462612457858461191f565b9160001a91876118fd565b536118ee565b612422565b9081518151116124cb57600090815b81518110156124c2576001600160f81b03198061249983876118fd565b5116906124a683856118fd565b5116036124bb576124b6906118ee565b61247c565b5050905090565b50505050600190565b5050600090565b91906000916124e3610538836117c7565b93600592838610156126355760018096036125fe5790919285805b612538575b60405162461bcd60e51b815260206004820152600d60248201526c12d95e481b9bdd08199bdd5b99609a1b6044820152606490fd5b82518110156125f95761254e61053882856117ea565b828110156125e5576003036125e05761258e85612589602061257085886117ea565b510151606061257f86896117ea565b51015190886123e6565b612707565b156125b9575b600281018091116125a557866124fe565b634e487b7160e01b86526011600452602486fd5b95935050505082018092116125cc575090565b634e487b7160e01b81526011600452602490fd5b612594565b634e487b7160e01b87526021600452602487fd5b612503565b60405162461bcd60e51b815260206004820152600f60248201526e13d89a9958dd08195e1c1958dd1959608a1b6044820152606490fd5b634e487b7160e01b85526021600452602485fd5b60009291612659610538826117c7565b94600590818710156108f05760018097036125fe578681018091116125a557865b6126b35760405162461bcd60e51b815260206004820152600d60248201526c12d95e481b9bdd08199bdd5b99609a1b6044820152606490fd5b82518110156125f9576126c961053882856117ea565b828110156125e557600303612702576126eb85612589602061257085886117ea565b156125b9575b600281018091116125a5578661267a565b6126f1565b805182518181106127a5575b5060005b818110612744575050519051908181101561273457505060001990565b111561273f57600190565b600090565b6001600160f81b03198061275883866118fd565b51168161276584886118fd565b5116111561277857505050505060001990565b8061278383866118fd565b51169061279083876118fd565b5116106124c2576127a0906118ee565b612717565b90503861271356fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbca264697066735822122015a70ff991fc6aa3f40735f7f538318bc9b9b1d82fca873d037420557b1498c464736f6c63430008110033";

type PricefeedConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PricefeedConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Pricefeed__factory extends ContractFactory {
  constructor(...args: PricefeedConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Pricefeed & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Pricefeed__factory {
    return super.connect(runner) as Pricefeed__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PricefeedInterface {
    return new Interface(_abi) as PricefeedInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Pricefeed {
    return new Contract(address, _abi, runner) as unknown as Pricefeed;
  }
}
